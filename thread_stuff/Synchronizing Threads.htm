<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0076)http://java.sun.com/docs/books/tutorial/essential/threads/multithreaded.html -->
<HTML><HEAD><TITLE>Synchronizing Threads</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<SCRIPT language=JavaScript>
<!-- hide
function openWin(term) {
  url="../../information/glossary.html#" + term;
  myWin= window.open(url, "Glossary",
              "width=400,height=150,scrollbars=yes,status=no,toolbar=no,menubar=no");
  myWin.focus();
}
//-->
</SCRIPT>

<META content="MSHTML 6.00.2800.1400" name=GENERATOR></HEAD>
<BODY link=#000099 bgColor=#ffffff><B><FONT size=-1>The Java</FONT><SUP><FONT 
size=-2>TM</FONT></SUP> <FONT size=-1>Tutorial</FONT></B> <BR>
<TABLE width=550 summary=layout>
  <TBODY>
  <TR>
    <TD vAlign=center align=left><A 
      href="http://java.sun.com/docs/books/tutorial/essential/threads/priority.html" 
      target=_top><IMG height=26 alt="Previous Page" 
      src="Synchronizing Threads_files/PreviousArrow.gif" width=26 align=center 
      border=0></A> <A 
      href="http://java.sun.com/docs/books/tutorial/essential/TOC.html#threads" 
      target=_top><IMG height=26 alt="Lesson Contents" 
      src="Synchronizing Threads_files/TOCIcon.gif" width=26 align=center 
      border=0></A> <A 
      href="http://java.sun.com/docs/books/tutorial/essential/threads/synchronization.html" 
      target=_top><IMG height=26 alt="Next Page" 
      src="Synchronizing Threads_files/NextArrow.gif" width=26 align=center 
      border=0></A></TD>
    <TD vAlign=center align=middle><FONT size=-1><A 
      href="http://java.sun.com/docs/books/tutorial/index.html" 
      target=_top>Start of Tutorial</A> &gt; <A 
      href="http://java.sun.com/docs/books/tutorial/essential/index.html" 
      target=_top>Start of Trail</A> &gt; <A 
      href="http://java.sun.com/docs/books/tutorial/essential/threads/index.html" 
      target=_top>Start of Lesson</A> </FONT></TD>
    <TD vAlign=center align=right><FONT size=-1><A 
      href="http://java.sun.com/docs/books/tutorial/search.html" 
      target=_top>Search</A> <BR><A 
      href="http://java.sun.com/docs/books/tutorial/forms/sendusmail.html">Feedback 
      Form</A> </FONT></TD></TR></TBODY></TABLE><IMG height=8 alt="" 
src="Synchronizing Threads_files/blueline.gif" width=550 align=bottom 
NATURALSIZEFLAG="3"> <BR><FONT size=-1><B>Trail</B>: Essential Java Classes 
<BR><B>Lesson</B>: Threads: Doing Two or More Tasks At Once </FONT>
<H2>Synchronizing Threads </H2>
<BLOCKQUOTE>So far, this lesson has contained examples with independent, 
  asynchronous threads. That is, each thread contained all of the data and 
  methods required for its execution and didn't require any outside resources or 
  methods. In addition, the threads in those examples ran at their own pace 
  without concern over the state or activities of any other concurrently running 
  threads. 
  <P>However, there are many interesting situations where separate, concurrently 
  running threads do share data and must consider the state and activities of 
  other threads. One such set of programming situations are known as 
  producer/consumer scenarios where the producer generates a stream of data 
  which then is consumed by a consumer. 
  <P>For example, imagine a Java application where one thread (the producer) 
  writes data to a file while a second thread (the consumer) reads data from the 
  same file. Or, as you type characters on the keyboard, the producer thread 
  places key events in an event queue and the consumer thread reads the events 
  from the same queue. Both of these examples use concurrent threads that share 
  a common resource: the first shares a file, the second shares an event queue. 
  Because the threads share a common resource, they must be synchronized in some 
  way. </P></BLOCKQUOTE>
<H3><A 
href="http://java.sun.com/docs/books/tutorial/essential/threads/synchronization.html">The 
Producer/Consumer Example</A> </H3>
<BLOCKQUOTE>This lesson teaches you about Java thread synchronization through 
  a simple producer/consumer example. </BLOCKQUOTE>
<H3><A 
href="http://java.sun.com/docs/books/tutorial/essential/threads/monitors.html">Locking 
an Object</A> </H3>
<BLOCKQUOTE>The code segments within a program that access the same object 
  from separate, concurrent threads are called <EM>critical sections</EM>. In 
  the Java language, a critical section can be a block or a method and are 
  identified with the <CODE>synchronized</CODE> keyword. The Java platform then 
  associates a lock with every object that has synchronized code. </BLOCKQUOTE>
<H3><A 
href="http://java.sun.com/docs/books/tutorial/essential/threads/waitAndNotify.html">Using 
the <CODE>notifyAll</CODE> and <CODE>wait</CODE> Methods</A> </H3>
<BLOCKQUOTE>This section investigates the code in <CODE>CubbyHole</CODE>'s 
  <CODE>put</CODE> and <CODE>get</CODE> methods that helps the 
  <CODE>Producer</CODE> and <CODE>Consumer</CODE> coordinate their activities. 
</BLOCKQUOTE>
<H3><A 
href="http://java.sun.com/docs/books/tutorial/essential/threads/deadlock.html">Avoid 
Starvation and Deadlock</A></H3>
<BLOCKQUOTE>If you write a program in which several concurrent threads are 
  competing for resources, you must take precautions to ensure fairness. A 
  system is fair when each thread gets enough access to limited resource to make 
  reasonable progress. A fair system prevents <EM>starvation</EM> and 
  <EM>deadlock</EM>. Starvation occurs when one or more threads in your program 
  is blocked from gaining access to a resource and thus cannot make progress. 
  Deadlock is the ultimate form of starvation; it occurs when two or more 
  threads are waiting on a condition that cannot be satisfied. Deadlock most 
  often occurs when two (or more) threads are each waiting for the other(s) to 
  do something. 
  <P>This section uses the dining philosophers problem to illustrate deadlock. 
  It also discusses ways you can prevent deadlock. </P></BLOCKQUOTE><IMG height=8 
alt="" src="Synchronizing Threads_files/blueline.gif" width=550 align=bottom 
NATURALSIZEFLAG="3"> <BR>
<TABLE width=550 summary=layout>
  <TBODY>
  <TR>
    <TD vAlign=center align=left><A 
      href="http://java.sun.com/docs/books/tutorial/essential/threads/priority.html" 
      target=_top><IMG height=26 alt="Previous Page" 
      src="Synchronizing Threads_files/PreviousArrow.gif" width=26 align=center 
      border=0></A> <A 
      href="http://java.sun.com/docs/books/tutorial/essential/TOC.html#threads" 
      target=_top><IMG height=26 alt="Lesson Contents" 
      src="Synchronizing Threads_files/TOCIcon.gif" width=26 align=center 
      border=0></A> <A 
      href="http://java.sun.com/docs/books/tutorial/essential/threads/synchronization.html" 
      target=_top><IMG height=26 alt="Next Page" 
      src="Synchronizing Threads_files/NextArrow.gif" width=26 align=center 
      border=0></A></TD>
    <TD vAlign=center align=middle><FONT size=-1><A 
      href="http://java.sun.com/docs/books/tutorial/index.html" 
      target=_top>Start of Tutorial</A> &gt; <A 
      href="http://java.sun.com/docs/books/tutorial/essential/index.html" 
      target=_top>Start of Trail</A> &gt; <A 
      href="http://java.sun.com/docs/books/tutorial/essential/threads/index.html" 
      target=_top>Start of Lesson</A> </FONT></TD>
    <TD vAlign=center align=right><FONT size=-1><A 
      href="http://java.sun.com/docs/books/tutorial/search.html" 
      target=_top>Search</A> <BR><A 
      href="http://java.sun.com/docs/books/tutorial/forms/sendusmail.html">Feedback 
      Form</A> </FONT></TD></TR></TBODY></TABLE>
<P><FONT size=-1><A 
href="http://java.sun.com/docs/books/tutorial/information/copyright.html">Copyright</A> 
1995-2004 Sun Microsystems, Inc. All rights reserved. </FONT></P></BODY></HTML>
